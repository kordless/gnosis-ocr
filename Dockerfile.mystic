# Dockerfile for Gnosis Mystic Sidecar Container
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /mystic

# Install Gnosis Mystic and dependencies
RUN pip install --no-cache-dir \
    click>=8.0.0 \
    rich>=13.0.0 \
    pydantic>=2.0.0 \
    anyio>=4.0.0 \
    websockets>=12.0 \
    httpx>=0.25.0 \
    sse-starlette>=1.8.0 \
    uvicorn>=0.24.0 \
    fastapi>=0.104.0 \
    prompt-toolkit>=3.0.0 \
    pygments>=2.16.0 \
    psutil>=5.9.0 \
    watchdog>=3.0.0 \
    mcp \
    requests

# Clone and install Gnosis Mystic
# In production, you'd use a specific release version
RUN git clone https://github.com/gnosis/gnosis-mystic.git /tmp/gnosis-mystic && \
    cd /tmp/gnosis-mystic && \
    pip install -e . && \
    cp mystic_mcp_standalone.py /mystic/

# Copy Mystic server startup script
COPY mystic_server.py /mystic/mystic_server.py

# Create directories
RUN mkdir -p /var/lib/mystic /app/.mystic /mystic/logs

# Create non-root user
RUN useradd -m -s /bin/bash mystic && \
    chown -R mystic:mystic /mystic /var/lib/mystic

USER mystic

# Environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    MYSTIC_PORT=8899 \
    MYSTIC_HOST=0.0.0.0 \
    PROJECT_ROOT=/app

# Expose ports
EXPOSE 8899 8900

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:${MYSTIC_PORT}/health || exit 1

# Default command runs the Mystic server
CMD ["python", "/mystic/mystic_server.py"]
